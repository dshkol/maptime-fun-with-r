table(crime$N_HOOD)
table(crime$TYPE)
table(crime$YEAR)
crime <- crime[crime$YEAR!=2016,]
plot(crime$YEAR)
?plot
plot(crime$TYPE, crime$YEAR)
plot(table(crime$YEAR))
plot(table(crime$YEAR),l)
plot(table(crime$YEAR),type = "l")
plot(table(crime$YEAR),type = "c")
plot(table(crime$YEAR),type = "b")
plot(table(crime$YEAR),type = "b", ylab = "Offences")
plot(table(crime$YEAR),type = "b", ylab = "Offences", xlab = "Year")
library(ggplot2)
ggplot(table(crime$YEAR))
ggplot(data = crime, aes(x=YEAR, fill=TYPE))
ggplot(data = crime, aes(x=YEAR, fill=TYPE)) + geom_bar(stat="identity")
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin()
summary(year)
summary(crime$YEAR)
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin(bins = 13)
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin(breaks = YEAR)
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin(breaks = crime$YEAR)
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin()
str(crime)
crime$TYPE <- as.factor(crime$TYPE)
crime$YEAR <- as.factor(crime$YEAR)
crime$NEIGHBOURHOOD <- as.factor(crime$NEIGHBOURHOOD)
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_bin()
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat="count"
ggplot(data = crime, aes(x=YEAR,  fill=TYPE))
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat="YEAR"
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_count()
plot(table(crime$YEAR),type = "b", ylab = "Offences", xlab = "Year")
ggplot(data = crime, aes(x=YEAR,  fill=TYPE)) + stat_count()
download.file(ftp://webftp.vancouver.ca/OpenData/shape/local_area_boundary_shp.zip)
download.file("ftp://webftp.vancouver.ca/OpenData/shape/local_area_boundary_shp.zip")
download.file("ftp://webftp.vancouver.ca/OpenData/shape/local_area_boundary_shp.zip", "local_area_boundary_shp.zip")
unzip("local_area_boundary_shp.zip")
dir()
unzip("local_area_boundary_shp.zip", "local_area_boundary_shp")
unzip("local_area_boundary_shp.zip", dir.create("local_area_boundary_shp"))
unzip("local_area_boundary_shp.zip", dir = "local_area_boundary_shp")
?unzip
unzip("local_area_boundary_shp.zip", exdir = "local_area_boundary_shp")
local_areas <- readOGR(dsn = "local_area_boundary_shp", layer = "local_area_boundary")
plot(local_areas)
local_areas@data
local_area_names <- local_areas@data$NAME
neighbourhood_names <- levels(crime$NEIGHBOURHOOD)
neighbourhood_names
local_area_names
local_area_names <- levels(local_areas@data$NAME)
cbind(local_area_names,neighbourhood_names)
save.image("~/Documents/Maptime/rmaps/crime_tutorial.RData")
dir()
setwd("../../github")
dir()
setwd("maptime-fun-wit-r")
setwd("maptime-fun-with-r")
dir()
load("~/Documents/GitHub/maptime-fun-with-r/listings.R")
source("~/Documents/GitHub/maptime-fun-with-r/listings.R")
ggplot(listings, aes(factor(room_type))) + geom_bar
ggplot(listings, aes(factor(neighbourhood))) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip()
summarise(group_by(listings, neighbourhood), neighbourhood_median = median(price))
listings %>%
group_by(neighbourhood) %>%
summarise(neighbourhood_median = median(price))
summarise(neighbourhood_median = median(price))
listings %>%
group_by(neighbourhood, room_type) %>%
summarise(neighbourhood_median = median(price))
neighbourhood_prices <- listings %>%
group_by(neighbourhood, room_type) %>%
summarise(neighbourhood_median = median(price))
str(neighbourhood_prices)
neighbourhood_prices <- listings %>%
group_by(neighbourhood, room_type) %>%
summarise(median_price = median(price))
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_point()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_dotplot()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_boxplot()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_line()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_step()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type)) + geom_point()
neighbourhood_prices <- listings %>%
group_by(neighbourhood, room_type) %>%
summarise(median_price = median(price),
observations = count())
neighbourhood_prices <- listings %>%
group_by(neighbourhood, room_type) %>%
summarise(median_price = median(price),
observations = n())
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point()
View(neighbourhood_prices)
neighbourhood_prices[neighbourhood_prices$observations < 5] <- NA
neighbourhood_prices[neighbourhood_prices$observations < 5,] <- NA
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point()
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point(na.rm = TRUE)
ggplot(neighbourhood_prices, aes (x = median_price, y = neighbourhood, colour = room_type, size = observations, na.rm = TRUE)) + geom_point()
ggplot(neighbourhood_prices, aes (x = median_price, y = factor(neighbourhood), colour = room_type, size = observations)) + geom_point()
ggplot(neighbourhood_prices, aes (x = median_price, y = factor(neighbourhood), colour = factor(room_type), size = observations)) + geom_point()
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point()
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations, alpha= observations)) + geom_point()
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point()
str(neighbourhood_prices)
relevel(neighbourhood_prices$neighbourhood)
relevel(neighbourhood_prices$neighbourhood, rev(neighbourhood_prices))
relevel(neighbourhood_prices$neighbourhood) <- rev(levels(neighbourhood_prices))
neighbourhood_prices$neighbourhood <- factor(neighbourhood_prices$neighbourhood, levels=rev(levels(neighbourhood_prices$neighbourhood)))
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point()
?labs
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median per night listing price") + ylab("Neighbourhood (Per Host)")
?legend
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median per night listing price") + ylab("Neighbourhood (According to Host)") + theme(legend.title=element_blank())
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median per night listing price") + ylab("Neighbourhood (According to Host)") + scale_size_continuous(name = "Observations", breaks = c(50,200,400,600,800))
?scale_color_discrete
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median per night listing price") + ylab("Neighbourhood (According to Host)") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type")
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median price per night") + ylab("Neighbourhood") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type") + title("Median AirBnb Nightly Prices by Neighbourhood and Room Type in Vancouver")
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median price per night") + ylab("Neighbourhood") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type") + ggtitle("Median AirBnb Nightly Prices by Neighbourhood and Room Type in Vancouver")
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median price per night") + ylab("Neighbourhood") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type") + ggtitle("AirBnb Nightly Prices by Neighbourhood and Room Type", face = "bold")
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median price per night") + ylab("Neighbourhood") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type") + ggtitle("AirBnb Nightly Prices by Neighbourhood and Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(na.omit(neighbourhood_prices), aes (x = median_price, y = neighbourhood, colour = room_type, size = observations)) + geom_point() + xlab("Median price per night") + ylab("Neighbourhood") + scale_size_continuous(name = "Observations", breaks = c(50,250,500,750)) + scale_colour_discrete(name="Room Type") + ggtitle("AirBnB Nightly Prices by Neighbourhood and Room Type") +theme(plot.title = element_text(face = "bold"))
ggsave("nightly_prices_breakdown.png")
str(listings)
?ggmap
?get_map
vanMap <- get_map(location = "Vancouver, BC", zoom = 9, maptype = "toner-hybrid")
library(ggmap)
vanMap <- get_map(location = "Vancouver, BC", zoom = 9, maptype = "toner-hybrid")
vanMap
ggmap(vanMap)
vanMap <- get_map(location = "Vancouver, BC", zoom = 11, maptype = "toner-hybrid")
ggmap(vanMap)
vanMap <- get_map(location = "Vancouver, BC", zoom = 12, maptype = "toner")
ggmap(vanMap)
summary(listings$latitude)
summary(listings$longitude)
left <- min(listings$longitude)
right <- max(listings$longitude)
top <- max(listings$latitude)
bottom <- min(listings$latitude)
bbox <- c(left,bottom,right,top)
bbox
bbox <- paste(left,bottom,right,top, sep=",")
bbox
vanMap <- get_map(location = bbox, zoom = auto, maptype = "toner")
vanMap <- get_map(location = bbox, zoom = "auto", maptype = "toner")
bbox2 <- c(left,bottom,right,top)
vanMap <- get_map(location = bbox2, zoom = "auto", maptype = "toner")
?ggmap::make_bbox()
?make_bbox
bbox <- make_bbox(listings$longitude, listings$latitude,5)
bbox <- make_bbox(longitude, latitude, listings, f = 0.5)
bbox
vanMap <- get_map(location = bbox, zoom = "auto", maptype = "toner")
vanMap <- get_map(location = bbox, zoom = "auto")
vanMap <- get_map(location = bbox, zoom = 11, maptype = "toner")
ggmap(vanMap)
vanMap <- get_map(location = bbox, zoom = 12, maptype = "toner")
ggmap(vanMap)
warnings()
?ggmap
vanMap + geom_point(aes(x = lon, y = lat, colour = room_type), data = listings)
ggmap(vanMap) + geom_point(aes(x = lon, y = lat, colour = room_type), data = listings)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), data = listings)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5,  data = listings)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings)
bbox <- make_bbox(longitude, latitude, listings, f = 0.1)
vanMap <- get_map(location = bbox, zoom = 12, maptype = "toner")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type, ncol = 2)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type) + theme(legend.position = "none")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type, margins = TRUE) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type, margins = TRUE, ncol = 2) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_wrap(~room_type, margins = TRUE) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_wrap(~room_type) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_grid(~room_type, margins = TRUE) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_wrap(~room_type) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggsave("room_type_map.png")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings)
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())  + scale_colour_discrete(name = "Room Type")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.25, size = 0.75, data = listings) + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())  + scale_colour_discrete(name = "Room Type")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.75, size = 1, data = listings) + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())  + scale_colour_discrete(name = "Room Type")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.75, size = 1, data = listings) + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank()) + scale_colour_discrete(name = "Room Type") + ggtitle("Map of AirBnB Listings by Room Type")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_wrap(~room_type) + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold"))
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.75, size = 1, data = listings) + ggtitle("Map of AirBnB Listings by Room Type") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold")) + scale_colour_discrete(name = "Room Type")
ggsave("ggmap_example_1.png")
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings) + facet_wrap(~room_type) + ggtitle("AirBnB Listings by Room Type") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggsave("ggmap_example_2.png")
levels(listings$room_type)
listings_apt <- listings[listings$room_type == 1,]
listings_apt <- listings[listings$room_type == "Entire home/apt",]
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 0.5, data = listings_apt) + ggtitle("AirBnB Listings by Room Type") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.5, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = room_type), alpha = 0.75, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.75, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.75, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
?scale_colour_continuous
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, fill = price), alpha = 0.75, size = 1, data = listings_apt) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.75, size = 1, data = listings_apt) + scale_colour_gradient(low = "yellow", high = "darkred") + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "darkred") + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "orange") + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "darkorange") + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "darkred") + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "darkred", limits = c(50,1000)) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_point(aes(x = longitude, y = latitude, colour = price), alpha = 0.95, size = 1, data = listings_apt) + scale_colour_gradient(low = "lightgrey", high = "darkred", limits = c(100,750)) + ggtitle("AirBnB Listings (Entire Home/Apartment)") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) + stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price), size = 0.01, bins = 16, geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
?stat_density2d
?stat_density_2d
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) + stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price), size = 0.01, bins = 16, geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt)  + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price), size = 0.01, geom = "polygon", data = listings_apt)+ ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price), geom = "polygon", data = listings_apt)+ ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price),  data = listings_apt)+ ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "none", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price),  data = listings_apt)+ ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred") + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price),  data = listings_apt)+ ggtitle("title")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = price), geom = "polygon", data = listings_apt)+ ggtitle("title")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = ..level..), geom = "polygon", data = listings_apt)+ ggtitle("title")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = ..level, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = ..level.., alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = ..level..), geom = "contour", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, fill = price, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, colour = price, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_fill_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
ggmap(vanMap) + geom_density2d(aes(x = longitude, y = latitude), data = listings_apt) +  stat_density2d(aes(x = longitude, y = latitude, colour = price, alpha = ..level..), geom = "polygon", data = listings_apt) + ggtitle("title") + scale_colour_gradient(low = "lightgrey", high = "darkred")  + theme(legend.position = "bottom", axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), plot.title = element_text(face = "bold") )
dir()
dir()
library(rgdal)
localArea <- readOGR(dsn = "csg_neighborhood_areas", layer = "csg_neighborhood_areas")
?readOGR
localArea <- readOGR(dsn = "localAreaBoundary", layer = "csg_neighborhood_areas")
plot(localArea)
localArea@proj4string
str(listings)
?sp
?rgdal
listings.sp <- SpatialPointsDataFrame(c(listings$longitude,listings$latitude), data = listings)
?SpatialPointsDataFrame
listings.coordinates <- c(listings$longitude,listings$latitude)
str(listings.coordinates)
listings.coordinates <- cbind.data.frame(listings$longitude,listings$latitude)
str(listings.coordinates)
listings.sp <- SpatialPointsDataFrame(listings.coordinates, data = listings)
listings.sp@proj4string
localArea@proj4string
listings.sp@proj4string <- localArea@proj4string
plot(listings.sp)
plot(localArea, add = TRUE)
plot(localArea)
?plot
plot(listings.sp, add = TRUE)
localArea@bbox
?spTransform
CRS("+proj=longlat +datum=WGS84"))
localArea <- spTransform(localArea,CRS("+proj=longlat +datum=WGS84"))
plot(localArea)
plot(listings.sp, add = TRUE)
plot(localArea)
plot(listings.sp, add = TRUE)
table(listings.sp@data$room_type)
?plot
plot(localArea)
plot(listings.sp$room_type, add = TRUE)
plot(listings.sp, add = TRUE)
plot(localArea)
plot(listings.sp, add = TRUE)
localArea@data$NAME
plot(localArea[localArea$NAME == "Mount Pleasant"])
plot(localArea[localArea$NAME == "Mount Pleasant",])
listings.sp$neighbourhood
levels(listings.sp$neighbourhood)
plot(listings.sp[listings.sp$neighbourhood == "Mount Pleasant",])
plot(localArea[localArea$NAME == "Mount Pleasant",])
plot(listings.sp[listings.sp$neighbourhood == "Mount Pleasant",], add = TRUE)
plot(listings.sp[listings.sp$neighbourhood == "Mount Pleasant",], add = TRUE)
plot(listings.sp[listings.sp$neighbourhood == "Mount Pleasant",])
plot(localArea[localArea$NAME == "Mount Pleasant",], add = TRUE)
plot(listings.sp[listings.sp$neighbourhood == "Kitsilano",])
plot(localArea[localArea$NAME == "Kitsilano",], add = TRUE)
plot(listings.sp[listings.sp$neighbourhood == "Gastown",])
table(listings.sp$neighbourhood)
localArea@data$NAME
plot(listings.sp[listings.sp$neighbourhood == "Downtown Eastside",])
plot(localArea[localArea$NAME == "Downtown Eastside",], add = TRUE)
levels(localArea$NAME)
cbind(levels(localArea$NAME), levels(listings$neighbourhood))
env()
neighbourhood_prices
str(neighbourhood)
nhoods <- merge(localArea,neighbourhood_prices,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
neighbourhoo_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type = "Entire home/apt"]
neighbourhoo_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type == "Entire home/apt",]
nhoods <- merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
neighbourhood_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type == "Entire home/apt",]
nhoods <- merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
neighbourhood_prices_home
neighbourhood_prices_home <- neighbourhood_prices_home[!is.na(neighbourhood_prices_home),]
neighbourhood_prices_home
neighbourhood_prices_home$room_type <- NULL
nhoods <- merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
table(neighbourhood_prices_home$neighbourhood)
table(localArea@data$NAME)
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(room_type))) + geom_bar
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(neighbourhood))) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(room_type))) + geom_bar()
ggplot(listings, aes(factor(neighbourhood))) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(room_type))) + geom_bar()
ggplot(listings, aes(factor(room_type))) + geom_bar() + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar(colour = "navy") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar(colour = "darkblue") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar(colour = "blue") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar(fill = "navyblue") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar(fill = "darkred") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggsave("listings_count_by_type.png")
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip()
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_colour_manual(name="Room Type", values = c("darkred","orange","purple")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_colour_discrete(name="Room Type", values = c("darkred","orange","purple")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_colour_discrete(name="Room Type") + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_colour_manual(values = c("darkred","orange","purple")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","orange","purple")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","darkgrey","lightgrey")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","darkgrey","grey80")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","darkgrey","grey50")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","darkgrey","grey20")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","grey10","grey20")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("darkred","grey10","darkorange")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","grey10","darkorange")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","darkgreen","darkorange")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","aquamarine","darkorange")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","#2ad2c9","darkorange")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","#2ad2c9","#eb5424")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(values = c("#fd5c63","#2ad2c9","#fdbd10")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(neighbourhood), fill = room_type)) + geom_bar() + coord_flip() + xlab("Number of Listings") + ylab("Neighbourhood") + scale_fill_manual(name = "Room Type",values = c("#fd5c63","#2ad2c9","#fdbd10")) + ggtitle("Vancouver AirBnB Listings by Type and Neighbourhood") +theme(plot.title = element_text(face = "bold"))
ggsave("listings_county_by_type_neighbourhood.png")
ggplot(listings, aes(factor(room_type))) + geom_bar(fill = "#fd5c63") + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar() +  scale_fill_manual(values = c("Entire home/apt" = "#fd5c63","Private room" = "grey30","Shared room" = "grey30")) + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type))) + geom_bar() +  scale_fill_manual(values = c("#fd5c63","grey30", "grey30")) + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type), fill = room_type)) + geom_bar() +  scale_fill_manual(values = c("Entire home/apt" = "#fd5c63","Private room" = "grey30","Shared room" = "grey30")) + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") +theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type), fill = room_type)) + geom_bar() +  scale_fill_manual(position = "none", values = c("Entire home/apt" = "#fd5c63","Private room" = "grey30","Shared room" = "grey30")) + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") + theme(plot.title = element_text(face = "bold"))
ggplot(listings, aes(factor(room_type), fill = room_type)) + geom_bar() +  scale_fill_manual(values = c("Entire home/apt" = "#fd5c63","Private room" = "grey30","Shared room" = "grey30")) + ylab("Number of Listings") + xlab("Room Type") + ggtitle("Vancouver AirBnB Listings by Room Type") + theme(plot.title = element_text(face = "bold"), legend.position = "none")
ggsave("listings_count_by_type.png")
?ggplot2
?ggplot
nhoods <- merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
sp::merge()
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE, duplicateGeoms = TRUE)
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
neighbourhood_prices_home
View(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices_home[!is.na(neighbourhood_prices_home)]
View(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type == "Entire home/apt",]
neighbourhood_prices_home <- neighbourhood_prices_home[!is.na(neighbourhood_prices_home$neighbourhood)]
View(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type == "Entire home/apt",]
View(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices_home[!is.na(neighbourhood_prices_home$neighbourhood),]
View(neighbourhood_prices_home)
neighbourhood_prices_home$room_type <- NULL
View(neighbourhood_prices_home)
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
View(neighbourhood_prices_home)
View(localArea@data)
nhoods <- sp::merge(localArea@data,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
nhoods
plot(nhoods)
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
?sp::`merge,Spatial,ANY-method`
nhoods <- sp::merge(localArea,neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE, duplicateGeoms = TRUE)
nhoods <- sp::merge(x = localArea,y = neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE, duplicateGeoms = TRUE)
str(neighbourhood_prices_home)
as.data.frame(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices[neighbourhood_prices$room_type == "Entire home/apt",]
neighbourhood_prices_home <- as.data.frame(neighbourhood_prices_home)
neighbourhood_prices_home <- neighbourhood_prices_home[!is.na(neighbourhood_prices_home$neighbourhood),]
neighbourhood_prices_home$room_type <- NULL
View(neighbourhood_prices_home)
nhoods <- sp::merge(x = localArea,y = neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE, duplicateGeoms = TRUE)
plot(nhoods)
nhoods <- sp::merge(x = localArea,y = neighbourhood_prices_home,by.x = "NAME",by.y="neighbourhood", all.x = TRUE)
color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(group = name, fill = median_price), color = "black", size = 0.25)
nhoods@data$NAME
ggplot() + geom_polygon(data = nhoods, aes(group = "NAME", fill = median_price), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(group = "NAME", fill = "median_price"), color = "black", size = 0.25)
nhoods@polygons
nhoods$long
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = "median_price"), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = median_price), color = "black", size = 0.25)
nhoods@data$median_price
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = nhoods@data$median_price), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = "median_price"), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = "NAME", fill = "median_price"), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = NAME, fill = "median_price"), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = ..median_price..), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group), fill = median_price, color = "black", size = 0.25)
str(nhoods)
str(nhoods@data)
ggplot() + geom_polygon(data = nhoods, aes(x = long, y = lat, group = group, fill = median_price), color = "black", size = 0.25)
spplot(nhoods,zcol="median_price")
?spplot
dir()
str(nhoods)
nhoods@polygons
nhoods@data$NAME
nhoods_gg <- fortify(nhoods, region = "NAME")
ggplot2::fortify(nhoods, region = "NAME")
library(maptools)
install.packages("maptools")
nhoods_gg <- fortify(nhoods, region = "NAME")
ggplot2::fortify(nhoods, region = "NAME")
library(maptools)
nhoods_gg <- fortify(nhoods, region = "NAME")
str(nhoods_gg)
ggplot() + geom_polygon(data = nhoods, aes(x = nhoods_gg$long, y = nhoods_gg$lat, group = group, fill = median_price), color = "black", size = 0.25)
ggplot() + geom_polygon(data = nhoods, aes(x = nhoods_gg$long, y = nhoods_gg$lat, group = group, fill = nhoods$median_price), color = "black", size = 0.25)
nhoods
str(neighbourhood_prices_home)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhoods, fill = median_price), map = nhoods_gg)
str(nhoods_gg)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhoods, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient2(low = muted("red"), mid = "white", midpoint = 150, high = muted("blue"))
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient2(low = "red", mid = "white", midpoint = 150, high = "blue")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "grey", high = "darkred")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "grey", high = "darkblue")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "lightgrey", high = "darkblue")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "lightgrey", high = "orange")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "lightgrey", high = "black")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "orange", high = "darkred")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "darkred", high = "oragen")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "darkred", high = "orange")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "darkred", high = "gold")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price ($/Night)")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price /n ($/Night)")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")  + theme(legend.position = c(0.1,0.1))
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")  + theme(legend.position = c(0.1,0.1), panel.background = element_blank(), panel.grid.minor = element_blank())
?axisTicks
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")  + theme(legend.position = c(0.1,0.1), panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank, axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")  + theme(legend.position = c(0.1,0.1), panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price/Night)")  + theme(legend.position = c(0.1,0.15), panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
coordinates(neighbourhood_prices_home)
coordinates(neighbourhood_prices_home$neighbourhood)
coordinates(nhoods_gg)
coordinates(localArea)
centroids <- as.data.frame(coordinates(localArea))
str(centroids)
centroids$neighbourhood <- localArea@data$NAME
str(centroids)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V2, y = V2, label = neighbourhood, size = 0.2)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V2, y = V2, label = neighbourhood, size = 1)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V2, y = V1, label = neighbourhood, size = 1)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
nhoods_gg
str(nhoods_gg)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V2, y = V1, label = neighbourhood, size = 1))
coordinates
centroids
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood, size = 1)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood, size = 0.5)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood, size = 0.2)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood, size = 0.1)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 0.1)) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 0.1) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 1) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 5) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 2) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = white, map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "#A80303", high = "#FFFB00", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), colour = "white", size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "black", high = "grey", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), colour = "white", size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "black", high = "darkred", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), colour = "white", size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + scale_fill_gradient(low = "darkgrey", high = "darkred", name = "Median Price") + geom_text(data = centroids, aes(x = V1, y = V2, label = neighbourhood), colour = "white", size = 3) + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_grid(facets = neighbourhood_prices_home$neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_grid(facets = neighbourhood_prices_home$neighbourhood ~.)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_grid(~neighbourhood_prices_home$neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_grid(~neighbourhood_prices_home$neighbourhood) + coord_map()
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_grid(~neighbourhood) + coord_map()
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_wrap(~neighbourhood) + coord_map()
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_wrap(~neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + facet_wrap(~neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), colour = "white", map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_wrap(~neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_wrap(~neighbourhood)
ggplot() + geom_map(data = neighbourhood_prices_home, aes(map_id = neighbourhood, fill = median_price), map = nhoods_gg) + expand_limits(x = nhoods_gg$long, y = nhoods_gg$lat) + facet_wrap(~neighbourhood) + scale_fill_gradient(low = "darkgrey", high = "darkred", name = "Median Price") + theme(panel.background = element_blank(), panel.grid.minor = element_blank(), axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank())
library(leaflet)
library(dplyr)
nhoods_gg$id
pal <- colorQuantile("YlGn", NULL, n = 5)
area_popup <- paste0("<strong>Neighbourhood</strong>",nhoods@data$NAME, "<br><strong>Median Price/Night: </strong>", nhoods@data$median_price,"<br><strong>Number of listings: </strong>",nhoods@data$observations)
leaflet(data = nhoods) %>% addProviderTiles("CartoDB.Positron") %>% addPolygons(fillColor = ~pal(median_price), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, popup = area_popup)
area_popup <- paste0("<strong>Neighbourhood: </strong>",nhoods@data$NAME, "<br><strong>Median Price/Night: </strong>", nhoods@data$median_price,"<br><strong>Number of listings: </strong>",nhoods@data$observations)
leaflet(data = nhoods) %>% addProviderTiles("CartoDB.Positron") %>% addPolygons(fillColor = ~pal(median_price), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, popup = area_popup) %>% addLegend("topright", pal = pal, values = median_price, title = "Median Price", labFormat = labelFormat(prefix = "$"), opacity = 1)
leaflet(data = nhoods) %>% addProviderTiles("CartoDB.Positron") %>% addPolygons(fillColor = ~pal(median_price), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, popup = area_popup) %>% addLegend("topright", pal = pal, values = ~median_price, title = "Median Price", labFormat = labelFormat(prefix = "$"), opacity = 1)
pal <- colorNumeric("YlGn", NULL, n = 5)
leaflet(data = nhoods) %>% addProviderTiles("CartoDB.Positron") %>% addPolygons(fillColor = ~pal(median_price), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, popup = area_popup) %>% addLegend("topright", pal = pal, values = ~median_price, title = "Median Price", labFormat = labelFormat(prefix = "$"), opacity = 1)
